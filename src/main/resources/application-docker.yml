spring:
  application:
    name: user-service
  cloud:
    discovery:
      enabled: true

  security:
    user:
      name: ${USER_NAME:your_username_here}
      password: ${USER_PASSWORD:your_password_here}
  app:
    jwtSecret: ${JWT_SECRET:your_jwt_secret_here}
    access:
      expiration-ms: ${JWT_ACCESS_EXPIRATION_MS:600000}
    refresh:
      expiration-ms: ${JWT_REFRESH_EXPIRATION_MS:604800000}

  datasource:
    url: jdbc:postgresql://user-db:5432/userDB
    username: ${USER_DB_USER}
    password: ${USER_DB_PASSWORD}
    driver-class-name: org.postgresql.Driver
    hikari:
      minimum-idle: 3
      maximum-pool-size: 5

  flyway:
    enabled: false

  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: true
        use_sql_comments: true

  data:
    redis:
      host: user-redis
      port: 6379
      password: ${REDIS_PASSWORD}
      timeout: 2000
      database: 0
      lettuce:
        pool:
          max-active: 8
          max-idle: 8
          min-idle: 0

  rabbitmq:
    host: user-rabbitmq
    port: 5672
    username: ${RABBITMQ_USER}
    password: ${RABBITMQ_PASSWORD}
    notification:
      queue:
        name: notification-queue
      exchange:
        name: notification-exchange
      routing:
        key: notification.#

  google:
    client-id: ${SPRING_GOOGLE_CLIENT_ID}
    client-secret: ${SPRING_GOOGLE_CLIENT_SECRET}
  github:
    client-id: ${SPRING_GITHUB_CLIENT_ID}
    client-secret: ${SPRING_GITHUB_CLIENT_SECRET}
    redirect-uri: http://localhost:3000/callback

eureka:
  client:
    service-url:
      defaultZone: http://service-registry:8761/eureka/
    register-with-eureka: true
    fetch-registry: true
  instance:
    prefer-ip-address: true
    hostname: user-service
    instance-id: ${spring.application.name}:${server.port}
    appname: ${spring.application.name}
    secure-port-enabled: false
    non-secure-port-enabled: true
    lease-renewal-interval-in-seconds: 30
    lease-expiration-duration-in-seconds: 90

server:
  port: 8081
  servlet:
    multipart:
      max-file-size: 3MB
      max-request-size: 5MB
      enabled: true

cloudinary:
  # Uses CLOUDINARY_URL env var
