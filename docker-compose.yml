version: '3.8'

services:
  user-service:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: scholar-user-service
    env_file:
      - .env
    ports:
      - "8081:8081"
    environment:
      - SPRING_PROFILES_ACTIVE=${SPRING_PROFILE}
      - SERVER_PORT=8081
      - EUREKA_CLIENT_SERVICE_URL_DEFAULTZONE=http://service-registry:8761/eureka/
      - USER_DB_PORT=${USER_DB_PORT}
      - USER_DB_USER=${USER_DB_USER}
      - USER_DB_PASSWORD=${USER_DB_PASSWORD}
      - REDIS_PORT=${REDIS_PORT}
      - REDIS_PASSWORD=${REDIS_PASSWORD}
      - RABBITMQ_PORT=${RABBITMQ_PORT}
      - RABBITMQ_USER=${RABBITMQ_USER}
      - RABBITMQ_PASSWORD=${RABBITMQ_PASSWORD}
      - JWT_SECRET=${JWT_SECRET}
      - JWT_ACCESS_EXPIRATION_MS=${JWT_ACCESS_EXPIRATION_MS}
      - JWT_REFRESH_EXPIRATION_MS=${JWT_REFRESH_EXPIRATION_MS}
      - USER_NAME=${USER_NAME}
      - USER_PASSWORD=${USER_PASSWORD}
      - SPRING_GOOGLE_CLIENT_ID=${SPRING_GOOGLE_CLIENT_ID}
      - SPRING_GOOGLE_CLIENT_SECRET=${SPRING_GOOGLE_CLIENT_SECRET}
      - SPRING_GITHUB_CLIENT_ID=${SPRING_GITHUB_CLIENT_ID}
      - SPRING_GITHUB_CLIENT_SECRET=${SPRING_GITHUB_CLIENT_SECRET}
      - B2_ENDPOINT=${B2_ENDPOINT}
      - B2_KEY_ID=${B2_KEY_ID}
      - B2_APPLICATION_KEY=${B2_APPLICATION_KEY}
      - B2_BUCKET_NAME=${B2_BUCKET_NAME}
      - B2_BUCKET_ID=${B2_BUCKET_ID}
      - PUBLIC_CDN_BASE=${PUBLIC_CDN_BASE}
    networks:
      - scholarai-network
    restart: unless-stopped
    # Will connect to existing infrastructure via network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8081/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  # Note: user-postgres is already running from meta/Scripts/docker.sh
  # This service will connect to the existing user-db container

  # Note: service-registry is already running from the main orchestration
  # This service will connect to the existing service-registry container

# Volumes are managed by meta/Scripts/docker.sh

networks:
  scholarai-network:
    external: true
    name: docker_scholarai-network
